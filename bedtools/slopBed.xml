<tool id="bedtools_slopbed" name="SlopBed" version="0.2.0">
    <description></description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <command>
        bedtools slop
        $pct
        $strand
        -g $genome
        -i $inputA
        #if addition.addition_select = 'b':
        -b $b
        #else:
        -l $l
        -r $r
        #end if
        $header

        &gt; $output
        
    </command>
    <inputs>
        <param format="bed,vcf,gff,gff3" name="inputA" type="data" label="BED or BAM file"/>
        <expand macro="genome" />
        <param name="pct" type="boolean" checked="false" truevalue="-pct" falsevalue="" label="Define -l and -r as a fraction of the feature’s length" help="E.g. if used on a 1000bp feature, -l 0.50, will add 500 bp “upstream”" />
        <param name="strand" type="boolean" checked="false" truevalue="-s" falsevalue="" label="Define -l and -r based on strand" help="For example. if used, -l 500 for a negative-stranded feature, it will add 500 bp to the end coordinate" />
        <expand macro="addition" />
        <param name="header" type="boolean" checked="true" truevalue="-header" falsevalue="" label="Print the header from the input file prior to results." />
        
    </inputs>
    <outputs>
        <data format="bed" name="output" label=""/>
    </outputs>
    <help>

**What it does**

bedtools slop will increase the size of each feature in a feature file by a user-defined number of bases. While something like this could be done with an awk '{OFS="\t" print $1,$2-<slop>,$3+<slop>}', bedtools slop will restrict the resizing to the size of the chromosome (i.e. no start &lt; 0 and no end > chromosome size).
.. image:: $PATH_TO_IMAGES/slop-glyph.png

.. class:: warningmark

In order to prevent the extension of intervals beyond chromosome boundaries, bedtools slop requires a genome file defining the length of each chromosome or contig.
@REFERENCES@
    </help>
</tool>
